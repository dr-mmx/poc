// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: poc/poc/app_registry.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AppRegistry struct {
	Index      string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Stake      string `protobuf:"bytes,2,opt,name=stake,proto3" json:"stake,omitempty"`
	DevId      string `protobuf:"bytes,3,opt,name=devId,proto3" json:"devId,omitempty"`
	Parameters string `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Users      string `protobuf:"bytes,5,opt,name=users,proto3" json:"users,omitempty"`
}

func (m *AppRegistry) Reset()         { *m = AppRegistry{} }
func (m *AppRegistry) String() string { return proto.CompactTextString(m) }
func (*AppRegistry) ProtoMessage()    {}
func (*AppRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d3ebab127a5ad8e, []int{0}
}
func (m *AppRegistry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppRegistry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AppRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRegistry.Merge(m, src)
}
func (m *AppRegistry) XXX_Size() int {
	return m.Size()
}
func (m *AppRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_AppRegistry proto.InternalMessageInfo

func (m *AppRegistry) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *AppRegistry) GetStake() string {
	if m != nil {
		return m.Stake
	}
	return ""
}

func (m *AppRegistry) GetDevId() string {
	if m != nil {
		return m.DevId
	}
	return ""
}

func (m *AppRegistry) GetParameters() string {
	if m != nil {
		return m.Parameters
	}
	return ""
}

func (m *AppRegistry) GetUsers() string {
	if m != nil {
		return m.Users
	}
	return ""
}

func init() {
	proto.RegisterType((*AppRegistry)(nil), "poc.poc.AppRegistry")
}

func init() { proto.RegisterFile("poc/poc/app_registry.proto", fileDescriptor_7d3ebab127a5ad8e) }

var fileDescriptor_7d3ebab127a5ad8e = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0xc8, 0x4f, 0xd6,
	0x07, 0xe1, 0xc4, 0x82, 0x82, 0xf8, 0xa2, 0xd4, 0xf4, 0xcc, 0xe2, 0x92, 0xa2, 0x4a, 0xbd, 0x82,
	0xa2, 0xfc, 0x92, 0x7c, 0x21, 0xf6, 0x82, 0xfc, 0x64, 0xbd, 0x82, 0xfc, 0x64, 0xa5, 0x56, 0x46,
	0x2e, 0x6e, 0xc7, 0x82, 0x82, 0x20, 0xa8, 0xb4, 0x90, 0x08, 0x17, 0x6b, 0x66, 0x5e, 0x4a, 0x6a,
	0x85, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x03, 0x12, 0x2d, 0x2e, 0x49, 0xcc, 0x4e,
	0x95, 0x60, 0x82, 0x88, 0x82, 0x39, 0x20, 0xd1, 0x94, 0xd4, 0x32, 0xcf, 0x14, 0x09, 0x66, 0x88,
	0x28, 0x98, 0x23, 0x24, 0xc7, 0xc5, 0x55, 0x90, 0x58, 0x94, 0x98, 0x9b, 0x5a, 0x92, 0x5a, 0x54,
	0x2c, 0xc1, 0x02, 0x96, 0x42, 0x12, 0x01, 0xe9, 0x2a, 0x2d, 0x06, 0x49, 0xb1, 0x42, 0x74, 0x81,
	0x39, 0x4e, 0x9a, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3,
	0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10, 0xc5, 0x0f, 0xf2,
	0x42, 0x05, 0xd8, 0x23, 0x25, 0x95, 0x05, 0xa9, 0xc5, 0x49, 0x6c, 0x60, 0x2f, 0x18, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x57, 0x87, 0x52, 0xcb, 0xe0, 0x00, 0x00, 0x00,
}

func (m *AppRegistry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppRegistry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AppRegistry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Users) > 0 {
		i -= len(m.Users)
		copy(dAtA[i:], m.Users)
		i = encodeVarintAppRegistry(dAtA, i, uint64(len(m.Users)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Parameters) > 0 {
		i -= len(m.Parameters)
		copy(dAtA[i:], m.Parameters)
		i = encodeVarintAppRegistry(dAtA, i, uint64(len(m.Parameters)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DevId) > 0 {
		i -= len(m.DevId)
		copy(dAtA[i:], m.DevId)
		i = encodeVarintAppRegistry(dAtA, i, uint64(len(m.DevId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Stake) > 0 {
		i -= len(m.Stake)
		copy(dAtA[i:], m.Stake)
		i = encodeVarintAppRegistry(dAtA, i, uint64(len(m.Stake)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintAppRegistry(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintAppRegistry(dAtA []byte, offset int, v uint64) int {
	offset -= sovAppRegistry(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AppRegistry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovAppRegistry(uint64(l))
	}
	l = len(m.Stake)
	if l > 0 {
		n += 1 + l + sovAppRegistry(uint64(l))
	}
	l = len(m.DevId)
	if l > 0 {
		n += 1 + l + sovAppRegistry(uint64(l))
	}
	l = len(m.Parameters)
	if l > 0 {
		n += 1 + l + sovAppRegistry(uint64(l))
	}
	l = len(m.Users)
	if l > 0 {
		n += 1 + l + sovAppRegistry(uint64(l))
	}
	return n
}

func sovAppRegistry(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAppRegistry(x uint64) (n int) {
	return sovAppRegistry(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AppRegistry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAppRegistry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppRegistry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppRegistry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppRegistry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAppRegistry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stake", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppRegistry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAppRegistry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stake = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DevId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppRegistry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAppRegistry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DevId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameters", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppRegistry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAppRegistry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameters = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAppRegistry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAppRegistry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAppRegistry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAppRegistry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAppRegistry(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAppRegistry
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAppRegistry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAppRegistry
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAppRegistry
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAppRegistry
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAppRegistry        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAppRegistry          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAppRegistry = fmt.Errorf("proto: unexpected end of group")
)
